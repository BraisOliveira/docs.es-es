### YamlMime:Tutorial
title: <span data-ttu-id="18e6f-101">Uso de la interpolación de cadenas para construir cadenas con formato</span><span class="sxs-lookup"><span data-stu-id="18e6f-101">Use string interpolation to construct formatted strings</span></span>
metadata:
  title: 'Interpolación de cadenas: tutorial interactivo de C#'
  description: En este tutorial se usa el explorador para examinar la característica de interpolación de cadenas de C# de manera interactiva. Escriba código de C# y vea los resultados de la compilación y la ejecución del código directamente en el explorador.
  audience: Developer
  ms.custom: mvc
  ms.date: 08/24/2018
  level: Beginner
  displayType: two-column
  interactive: csharp
  ms.openlocfilehash: 70d63f460ad2e67fe60cd8d5130e8ff22889d8be
  ms.sourcegitcommit: 96543603ae29bc05cecccb8667974d058af63b4a
  ms.translationtype: HT
  ms.contentlocale: es-ES
  ms.lasthandoff: 05/24/2019
  ms.locfileid: "66195948"
items:
- durationInMinutes: 2
  content: >
    <span data-ttu-id="18e6f-105">En este tutorial se muestra cómo usar la [interpolación de cadenas](../../language-reference/tokens/interpolated.md) para insertar valores en una cadena única.</span><span class="sxs-lookup"><span data-stu-id="18e6f-105">This tutorial teaches you how to use [string interpolation](../../language-reference/tokens/interpolated.md) to insert values into a single string.</span></span> <span data-ttu-id="18e6f-106">También aprenderá a controlar el formato de texto de la cadena de resultado.</span><span class="sxs-lookup"><span data-stu-id="18e6f-106">You also learn how to control text formatting of the result string.</span></span> <span data-ttu-id="18e6f-107">Se usa el explorador para escribir y ejecutar código de C# y se pueden ver al instante los resultados.</span><span class="sxs-lookup"><span data-stu-id="18e6f-107">You use your browser to write and run C# code and can immediately see the results.</span></span>
- title: <span data-ttu-id="18e6f-108">Crear una cadena interpolada</span><span class="sxs-lookup"><span data-stu-id="18e6f-108">Create an interpolated string</span></span>
  durationInMinutes: 2
  content: >
    <span data-ttu-id="18e6f-109">Ejecute el código siguiente en la ventana interactiva.</span><span class="sxs-lookup"><span data-stu-id="18e6f-109">Run the following code in the interactive window.</span></span> <span data-ttu-id="18e6f-110">Para ello, escriba el código en la ventana interactiva (sustituya `<name>` por su nombre) y seleccione **Ejecutar**:</span><span class="sxs-lookup"><span data-stu-id="18e6f-110">To do that, type the code in the interactive window (replace `<name>` with your name) and select **Run**:</span></span>


    ```csharp

    var name = "<name>";

    Console.WriteLine($"Hello, {name}. It's a pleasure to meet you!");

    ```


    <span data-ttu-id="18e6f-111">Al ejecutar el código, **Salida** muestra una cadena que incluye su nombre en el saludo.</span><span class="sxs-lookup"><span data-stu-id="18e6f-111">When you run the code, **Output** displays a string that includes your name in the greeting.</span></span> <span data-ttu-id="18e6f-112">El argumento de cadena de la llamada al método <xref:System.Console.WriteLine%2A> es una *expresión de cadena interpolada*.</span><span class="sxs-lookup"><span data-stu-id="18e6f-112">The string argument of the <xref:System.Console.WriteLine%2A> method call is an *interpolated string expression*.</span></span> <span data-ttu-id="18e6f-113">Es un tipo de plantilla que permite construir una sola cadena (denominada *cadena de resultado*) a partir de una cadena que incluye código incrustado.</span><span class="sxs-lookup"><span data-stu-id="18e6f-113">It's a kind of template that lets you construct a single string (called the *result string*) from a string that includes embedded code.</span></span> <span data-ttu-id="18e6f-114">Las expresiones de cadena interpoladas son especialmente útiles para insertar valores en una cadena o para concatenar (unir entre sí) varias cadenas.</span><span class="sxs-lookup"><span data-stu-id="18e6f-114">Interpolated string expressions are particularly useful for inserting values into a string or concatenating (joining together) several strings.</span></span>


    <span data-ttu-id="18e6f-115">El ejemplo anterior contiene los dos elementos que debe tener toda expresión de cadena interpolada:</span><span class="sxs-lookup"><span data-stu-id="18e6f-115">The example above contains the two elements that every interpolated string expression must have:</span></span>


    - <span data-ttu-id="18e6f-116">Un literal de cadena que empieza con el carácter `$` antes del carácter de comillas de apertura.</span><span class="sxs-lookup"><span data-stu-id="18e6f-116">A string literal that begins with the `$` character before its opening quotation mark character.</span></span> <span data-ttu-id="18e6f-117">No puede haber ningún espacio entre el símbolo `$` y el carácter de comillas.</span><span class="sxs-lookup"><span data-stu-id="18e6f-117">There can't be any spaces between the `$` symbol and the quotation mark character.</span></span> <span data-ttu-id="18e6f-118">(Si quiere ver qué ocurre si incluye uno, inserte un espacio después del carácter `$` en la ventana interactiva y ejecute el código actualizado.</span><span class="sxs-lookup"><span data-stu-id="18e6f-118">(If you'd like to see what happens if you include one, insert a space after the `$` character in the interactive window and run the updated code.</span></span> <span data-ttu-id="18e6f-119">El compilador de C# muestra el error: "Carácter no esperado '$'").</span><span class="sxs-lookup"><span data-stu-id="18e6f-119">The C# compiler complains, "Unexpected character '$'".)</span></span>


    - <span data-ttu-id="18e6f-120">Una o varias *expresiones de interpolación*.</span><span class="sxs-lookup"><span data-stu-id="18e6f-120">One or more *interpolation expressions*.</span></span> <span data-ttu-id="18e6f-121">Una expresión de interpolación se indica mediante una llave de apertura y de cierre (`{` y `}`).</span><span class="sxs-lookup"><span data-stu-id="18e6f-121">An interpolation expression is indicated by an opening and closing brace (`{` and `}`).</span></span> <span data-ttu-id="18e6f-122">Puede colocar cualquier expresión de C# que devuelva un valor (incluido `null`) dentro de las llaves.</span><span class="sxs-lookup"><span data-stu-id="18e6f-122">You can put any C# expression that returns a value (including `null`) inside the braces.</span></span>


    <span data-ttu-id="18e6f-123">Probemos algunos ejemplos más de interpolación de cadenas con otros tipos de datos.</span><span class="sxs-lookup"><span data-stu-id="18e6f-123">Let's try a few more string interpolation examples with some other data types.</span></span>


    > [!NOTE]

    > <span data-ttu-id="18e6f-124">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class="sxs-lookup"><span data-stu-id="18e6f-124">This online coding experience is in preview mode.</span></span> <span data-ttu-id="18e6f-125">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="18e6f-125">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="18e6f-126">Incluir diferentes tipos de datos</span><span class="sxs-lookup"><span data-stu-id="18e6f-126">Include different data types</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"18e6f-127\">En el paso anterior, se ha usado una interpolación de cadena para insertar una cadena dentro de otra.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18e6f-127\">In the previous step, you used string interpolation to insert one string inside of another.</span></span> <span data-ttu-id=\"18e6f-128\">Sin embargo, cada expresión de interpolación que forma parte de una expresión de cadena interpolada puede ser de cualquier tipo de datos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18e6f-128\">Each interpolation expression that is part of an interpolated string expression can be of any data type, though.</span></span> <span data-ttu-id=\"18e6f-129\">Vamos a incluir valores de distintas expresiones de tipos de datos en una cadena interpolada.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18e6f-129\">Let's include values of various data type expressions in an interpolated string.</span></span>\n\n<span data-ttu-id=\"18e6f-130\">En el siguiente ejemplo, primero definimos una [tupla](../../tuples.md) que tiene `Name`, `Price` y `perPackage` miembros.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18e6f-130\">In the following example, we first define a [tuple](../../tuples.md) that has `Name`, `Price`, and `perPackage` members.</span></span> <span data-ttu-id=\"18e6f-131\">Ejecute el código siguiente en la ventana interactiva:</span><span class=\"sxs-lookup\"><span data-stu-id=\"18e6f-131\">Run the following code in the interactive window:</span></span>\n\n```csharp\nvar item = (Name: \"eggplant\", Price: 1.99m, perPackage: 3);\nvar date = DateTime.Now;\nConsole.WriteLine($\"On {date}, the price of {item.Name} was {item.Price:C2} per {item.perPackage} items.\");\n```\n\n<span data-ttu-id=\"18e6f-132\">Observe que la expresión de interpolación `item.Price` de la cadena interpolada se resuelve en el texto \"1.99\" en la cadena de resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18e6f-132\">Note that the interpolation expression `item.Price` in the interpolated string resolves to the text \"1.99\" in the result string.</span></span> <span data-ttu-id=\"18e6f-133\">Esto se debe a que, cuando el tipo del resultado de la expresión no es una cadena, el resultado se resuelve en una cadena de la siguiente manera:</span><span class=\"sxs-lookup\"><span data-stu-id=\"18e6f-133\">That's because, when the type of the expression result is not a string, the result is resolved to a string in the following way:</span></span>\n\n- <span data-ttu-id=\"18e6f-134\">Si la expresión de interpolación se evalúa en `null`, se usa una cadena vacía (\"\", o <xref:System.String.Empty?displayProperty=nameWithType>).</span><span class=\"sxs-lookup\"><span data-stu-id=\"18e6f-134\">If the interpolation expression evaluates to `null`, an empty string (\"\", or <xref:System.String.Empty?displayProperty=nameWithType>) is used.</span></span>\n\n- <span data-ttu-id=\"18e6f-135\">Si la expresión de interpolación no se evalúa en `null`, se suele llamar al método `ToString` de la expresión de resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18e6f-135\">If the interpolation expression doesn't evaluate to `null`, typically the `ToString` method of the result expression is called.</span></span> \n\n<span data-ttu-id=\"18e6f-136\">En el resultado de este ejemplo, la fecha es demasiado precisa (el precio de \"eggplant\" no varía por segundos) y el valor del precio no indica una unidad de moneda.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18e6f-136\">In the output from this example, the date is too precise (the price of eggplant doesn't change every second), and the price value doesn't indicate a unit of currency.</span></span> <span data-ttu-id=\"18e6f-137\">En el paso siguiente se aprende a corregir esos problemas al controlar el formato de representaciones de cadena de los resultados de la expresión.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18e6f-137\">In the next step, you'll learn how to fix those issues by controlling the format of string representations of the expression results.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"18e6f-138\">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18e6f-138\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"18e6f-139\">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"18e6f-139\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="18e6f-140">Control del formato de las expresiones de interpolación</span><span class="sxs-lookup"><span data-stu-id="18e6f-140">Control the formatting of interpolation expressions</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="18e6f-141">En el paso anterior se han insertado en la cadena de resultado dos cadenas con formato incorrecto.</span><span class="sxs-lookup"><span data-stu-id="18e6f-141">In the previous step, two poorly formatted strings were inserted into the result string.</span></span> <span data-ttu-id="18e6f-142">Una era un valor de fecha y hora en la que solo la fecha era apropiada.</span><span class="sxs-lookup"><span data-stu-id="18e6f-142">One was a date and time value for which only the date was appropriate.</span></span> <span data-ttu-id="18e6f-143">La segunda era un precio que no indicaba su unidad de moneda.</span><span class="sxs-lookup"><span data-stu-id="18e6f-143">The second was a price that didn't indicate its unit of currency.</span></span> <span data-ttu-id="18e6f-144">Ambos problemas se podían solucionar fácilmente.</span><span class="sxs-lookup"><span data-stu-id="18e6f-144">Both issues are easy to address.</span></span> <span data-ttu-id="18e6f-145">La interpolación de cadena permite especificar *cadenas de formato* que controlan el formato de tipos específicos.</span><span class="sxs-lookup"><span data-stu-id="18e6f-145">String interpolation lets you specify *format strings* that control the formatting of particular types.</span></span> <span data-ttu-id="18e6f-146">Modifique la llamada a `Console.WriteLine` del ejemplo anterior para incluir las cadenas de formato para las expresiones de fecha y precio, como se muestra en la siguiente línea:</span><span class="sxs-lookup"><span data-stu-id="18e6f-146">Modify the call to `Console.WriteLine` from the previous example to include the format strings for the date and price expressions as shown in the following line:</span></span>


    ```csharp

    Console.WriteLine($"On {date:d}, the price of {item.Name} was {item.Price} per {item.perPackage} items");

    ```


    <span data-ttu-id="18e6f-147">Especifique una cadena de formato al colocar dos puntos (":") después de la expresión de interpolación y la cadena de formato.</span><span class="sxs-lookup"><span data-stu-id="18e6f-147">You specify a format string by following the interpolation expression with a colon (":") and the format string.</span></span> <span data-ttu-id="18e6f-148">"d" es una [cadena de formato de fecha y hora estándar](../../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) que representa el formato de fecha corta.</span><span class="sxs-lookup"><span data-stu-id="18e6f-148">"d" is a [standard date and time format string](../../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) that represents the short date format.</span></span> <span data-ttu-id="18e6f-149">"C2" es una [cadena de formato numérica estándar](../../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) que representa un número como un valor de moneda con dos dígitos después del separador decimal.</span><span class="sxs-lookup"><span data-stu-id="18e6f-149">"C2" is a [standard numeric format string](../../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) that represents a number as a currency value with two digits after the decimal point.</span></span>


    <span data-ttu-id="18e6f-150">Una serie de tipos de las bibliotecas de .NET admiten un conjunto predefinido de cadenas de formato.</span><span class="sxs-lookup"><span data-stu-id="18e6f-150">A number of types in the .NET libraries support a predefined set of format strings.</span></span> <span data-ttu-id="18e6f-151">Esto incluye todos los tipos numéricos y los tipos de fecha y hora.</span><span class="sxs-lookup"><span data-stu-id="18e6f-151">These include all the numeric types and the date and time types.</span></span> <span data-ttu-id="18e6f-152">Para obtener una lista completa de los tipos que admiten cadenas de formato, vea [Dar formato a cadenas y tipos de biblioteca de clase .NET](../../../standard/base-types/formatting-types.md#stringRef) en el artículo [Aplicar formato a tipos de .NET](../../../standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="18e6f-152">For a complete list of types that support format strings, see [Format Strings and .NET Class Library Types](../../../standard/base-types/formatting-types.md#stringRef) in the [Formatting Types in .NET](../../../standard/base-types/formatting-types.md) article.</span></span>


    <span data-ttu-id="18e6f-153">Pruebe a modificar las cadenas de formato del ejemplo para ver cómo afectan al formato de fecha y hora y al valor numérico.</span><span class="sxs-lookup"><span data-stu-id="18e6f-153">Try modifying the format strings in the example to see how they affect the formatting of the date and time and the numeric value.</span></span> <span data-ttu-id="18e6f-154">Cambie "d" en `{date:d}` a "t" (para mostrar el formato de hora corta), "y" (para mostrar el año y el mes) y "yyyy" (para mostrar el año como un número de cuatro dígitos).</span><span class="sxs-lookup"><span data-stu-id="18e6f-154">Change the "d" in `{date:d}` to "t" (to display the short time format), "y" (to display the year and month), and "yyyy" (to display the year as a four-digit number).</span></span> <span data-ttu-id="18e6f-155">Cambie "C2" en `{price:C2}` a "e" (para la notación exponencial) y "F3" (para un valor numérico con tres dígitos después del separador decimal).</span><span class="sxs-lookup"><span data-stu-id="18e6f-155">Change the "C2" in `{price:C2}` to "e" (for exponential notation) and "F3" (for a numeric value with three digits after the decimal point).</span></span>


    <span data-ttu-id="18e6f-156">Además de controlar el formato, también puede controlar el ancho de campo y la alineación de las cadenas con formato incluidas en la cadena de resultado.</span><span class="sxs-lookup"><span data-stu-id="18e6f-156">In addition to controlling formatting, you can also control the field width and alignment of the formatted strings that are included in the result string.</span></span> <span data-ttu-id="18e6f-157">En el paso siguiente aprenderá a hacerlo.</span><span class="sxs-lookup"><span data-stu-id="18e6f-157">In the next step, you'll learn how to do this.</span></span>


    > [!NOTE]

    > <span data-ttu-id="18e6f-158">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class="sxs-lookup"><span data-stu-id="18e6f-158">This online coding experience is in preview mode.</span></span> <span data-ttu-id="18e6f-159">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="18e6f-159">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="18e6f-160">Control el ancho de campo y la alineación de expresiones de interpolación</span><span class="sxs-lookup"><span data-stu-id="18e6f-160">Control the field width and alignment of interpolation expressions</span></span>
  durationInMinutes: 6
  content: >
    <span data-ttu-id="18e6f-161">Normalmente, cuando el resultado de una expresión de cadena interpolada tiene formato de cadena, esa cadena se incluye en una cadena de resultado sin espacios iniciales ni finales.</span><span class="sxs-lookup"><span data-stu-id="18e6f-161">Ordinarily, when the result of an interpolated string expression is formatted to string, that string is included in a result string without leading or trailing spaces.</span></span> <span data-ttu-id="18e6f-162">Especialmente cuando se trabaja con un conjunto de datos, poder controlar el ancho de un campo y la alineación del texto ayuda a generar una salida más legible.</span><span class="sxs-lookup"><span data-stu-id="18e6f-162">Particularly when you work with a set of data, being able to control a field width and text alignment helps to produce a more readable output.</span></span> <span data-ttu-id="18e6f-163">Para ver esto, ejecute el siguiente código:</span><span class="sxs-lookup"><span data-stu-id="18e6f-163">To see this, run the following code:</span></span>


    ```csharp
      var inventory = new Dictionary<string, int>()
      {
          ["hammer, ball pein"] = 18,
          ["hammer, cross pein"] = 5,
          ["screwdriver, Phillips #2"] = 14
      };

      Console.WriteLine($"Inventory on {DateTime.Now:d}");
      Console.WriteLine(" ");
      Console.WriteLine($"|{"Item",-25}|{"Quantity",10}|");
      foreach (var item in inventory)
         Console.WriteLine($"|{item.Key,-25}|{item.Value,10}|");
    ```


    <span data-ttu-id="18e6f-164">Los nombres de elemento están alineados a la izquierda y sus cantidades están alineadas a la derecha.</span><span class="sxs-lookup"><span data-stu-id="18e6f-164">The item names are left-aligned, and their quantities are right-aligned.</span></span> <span data-ttu-id="18e6f-165">Para especificar la alineación, se agrega una coma (",") después de una expresión de interpolación y se designa el ancho de campo *mínimo*.</span><span class="sxs-lookup"><span data-stu-id="18e6f-165">You specify the alignment by adding a comma (",") after an interpolation expression and designating the *minimum* field width.</span></span> <span data-ttu-id="18e6f-166">Si el valor especificado es un número positivo, el campo se alinea a la derecha.</span><span class="sxs-lookup"><span data-stu-id="18e6f-166">If the specified value is a positive number, the field is right-aligned.</span></span> <span data-ttu-id="18e6f-167">Si es un número negativo, el campo se alinea a la izquierda.</span><span class="sxs-lookup"><span data-stu-id="18e6f-167">If it is a negative number, the field is left-aligned.</span></span>


    <span data-ttu-id="18e6f-168">Pruebe a quitar los signos negativos del código `{"Item",-25}` e `{item.Key,-25}` y vuelva a ejecutar el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="18e6f-168">Try removing the negative signs from the `{"Item",-25}` and `{item.Key,-25}` code and run the example again.</span></span> <span data-ttu-id="18e6f-169">En esta ocasión, los nombres de elemento se alinean a la derecha.</span><span class="sxs-lookup"><span data-stu-id="18e6f-169">This time, the item names are right-aligned.</span></span>


    <span data-ttu-id="18e6f-170">Puede combinar un especificador de alineación y una cadena de formato en una única expresión de interpolación.</span><span class="sxs-lookup"><span data-stu-id="18e6f-170">You can combine an alignment specifier and a format string for a single interpolation expression.</span></span> <span data-ttu-id="18e6f-171">Para ello, especifique primero la alineación, seguida de dos puntos y la cadena de formato.</span><span class="sxs-lookup"><span data-stu-id="18e6f-171">To do that, specify the alignment first, followed by a colon and the format string.</span></span> <span data-ttu-id="18e6f-172">Pruebe el siguiente código que muestra tres cadenas con formato con anchos de campo definidos:</span><span class="sxs-lookup"><span data-stu-id="18e6f-172">Try the following code that displays three formatted strings with defined field widths:</span></span>


    ```csharp

    Console.WriteLine($"[{DateTime.Now,-20:d}] Hour [{DateTime.Now,-10:HH}] [{1063.342,15:N2}] feet");

    ```


    > [!NOTE]

    > <span data-ttu-id="18e6f-173">Esta experiencia de codificación en línea se encuentra disponible actualmente en versión preliminar.</span><span class="sxs-lookup"><span data-stu-id="18e6f-173">This online coding experience is in preview mode.</span></span> <span data-ttu-id="18e6f-174">Si tiene problemas, notifíquelos [en el repositorio de dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="18e6f-174">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: >-
    <span data-ttu-id="18e6f-175">Ha completado el tutorial interactivo sobre interpolación de cadenas.</span><span class="sxs-lookup"><span data-stu-id="18e6f-175">You've completed the string interpolation interactive tutorial.</span></span> <span data-ttu-id="18e6f-176">Puede hacer clic en el vínculo \*\*Números en C# \*\* siguiente para iniciar el siguiente tutorial interactivo, o bien puede visitar el [sitio de .NET](https://www.microsoft.com/net/learn/dotnet/hello-world-tutorial) para descargar el SDK de .NET Core, crear un proyecto en el equipo y continuar la codificación.</span><span class="sxs-lookup"><span data-stu-id="18e6f-176">You can click the **Collections in C#** link below to start the next interactive tutorial, or you can visit the [.NET site](https://www.microsoft.com/net/learn/dotnet/hello-world-tutorial) to download the .NET Core SDK, create a project on your machine, and keep coding.</span></span> <span data-ttu-id="18e6f-177">El paso "Mantenimiento del aprendizaje" le lleva de vuelta a estos tutoriales.</span><span class="sxs-lookup"><span data-stu-id="18e6f-177">The "Keep Learning" step brings you back to these tutorials.</span></span>


    <span data-ttu-id="18e6f-178">Para más información, vea [Interpolación de cadenas](../../language-reference/tokens/interpolated.md).</span><span class="sxs-lookup"><span data-stu-id="18e6f-178">For more information, see [String interpolation](../../language-reference/tokens/interpolated.md).</span></span>
